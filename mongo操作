
1.远程登录
	mongo 10.3.19.31:27017/test    

	mongo 10.3.19.31:27017/test -utest -ptest
	
2.



问题1：

[initandlisten] ** WARNING: soft rlimits too low. rlimits set to 1024 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.

vi /etc/security/limits.d/90-nproc.conf

*          soft    nproc     65535

问题2：

2015-09-09T11:04:35.011+0800 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
2015-09-09T11:04:35.011+0800 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
2015-09-09T11:04:35.011+0800 I CONTROL  [initandlisten] 
2015-09-09T11:04:35.011+0800 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.
2015-09-09T11:04:35.011+0800 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
2015-09-09T11:04:35.011+0800 I CONTROL  [initandlisten] 

缺少gcc 环境

yum install gcc

echo "never" > /sys/kernel/mm/transparent_hugepage/enabled
echo "never" > /sys/kernel/mm/transparent_hugepage/defrag




修改用户密码：

use admin
db.changeUserPassword("admin", "channel")


查看用户权限

db.runCommand(
{
   usersInfo:"userName",
   showPrivileges:true
}
)

删除mongo用户

db.removeUser("username")

修改用户密码



mongo 插入数据

SQL Statement                                       Mongo Query Language Statement
INSERT INTO USERS VALUES(1,1)                     $db->users->insert(array("a" => 1, "b" => 1));
SELECT a,b FROM users                             $db->users->find(array(), array("a" => 1, "b" => 1));
SELECT * FROM users WHERE age=33                  $db->users->find(array("age" => 33));
SELECT a,b FROM users WHERE age=33                  $db->users->find(array("age" => 33), array("a" => 1, "b" => 1));
SELECT a,b FROM users WHERE age=33 ORDER BY name  $db->users->find(array("age" => 33), array("a" => 1, "b" => 1))->sort(array("name" => 1));
SELECT * FROM users WHERE age>33                    $db->users->find(array("age" => array('$gt' => 33)));
SELECT * FROM users WHERE age<33                    $db->users->find(array("age" => array('$lt' => 33)));
SELECT * FROM users WHERE name LIKE "%Joe%"         $db->users->find(array("name" => new MongoRegex("/Joe/")));
SELECT * FROM users WHERE name LIKE "Joe%"          $db->users->find(array("name" => new MongoRegex("/^Joe/")));
SELECT * FROM users WHERE age>33 AND age<=40        $db->users->find(array("age" => array('$gt' => 33, '$lte' => 40)));
SELECT * FROM users ORDER BY name DESC              $db->users->find()->sort(array("name" => -1));
CREATE INDEX myindexname ON users(name)             $db->users->ensureIndex(array("name" => 1));
CREATE INDEX myindexname ON users(name,ts DESC)     $db->users->ensureIndex(array("name" => 1, "ts" => -1));
SELECT * FROM users WHERE a=1 and b='q'             $db->users->find(array("a" => 1, "b" => "q"));
SELECT * FROM users LIMIT 10 SKIP 20              $db->users->find()->limit(10)->skip(20);
SELECT * FROM users WHERE a=1 or b=2              $db->users->find(array('$or' => array(array("a" => 1), array("b" => 2))));
SELECT * FROM users LIMIT 1                         $db->users->find()->limit(1);
EXPLAIN SELECT * FROM users WHERE z=3             $db->users->find(array("z" => 3))->explain()
SELECT DISTINCT last_name FROM users              $db->command(array("distinct" => "users", "key" => "last_name"));
SELECT COUNT(*y) FROM users                         $db->users->count();
SELECT COUNT(*y) FROM users where AGE > 30          $db->users->find(array("age" => array('$gt' => 30)))->count();
SELECT COUNT(AGE) from users                      $db->users->find(array("age" => array('$exists' => true)))->count();
UPDATE users SET a=1 WHERE b='q'                  $db->users->update(array("b" => "q"), array('$set' => array("a" => 1)));
UPDATE users SET a=a+2 WHERE b='q'                  $db->users->update(array("b" => "q"), array('$inc' => array("a" => 2)));
DELETE FROM users WHERE z="abc"                     $db->users->remove(array("z" => "abc"));



28001.conf

port=28001
bind_ip=127.0.0.1
logpath=/data/log/mongodb/28001/28001.log
dbpath=/data/mongodb/28001/
logappend=true
pidfilepath=/data/mongodb/28001/28001.pid
fork=true
oplogSize=8096
replSet=Carl

