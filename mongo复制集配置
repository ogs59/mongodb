vi /server/mongodb/28001.conf

port=28001

logpath=/data/log/mongodb/28001.log

dbpath=/data/mongodb/data/28001/

logappend=true

pidfilepath=/data/mongodb/data/28001/28001.pid

fork=true

oplogSize=4096

replSet=Carl

开启4个进程。28001，28002，28003，28004

	mongod -f /server/mongodb/28001.conf
	mongod -f /server/mongodb/28002.conf
	mongod -f /server/mongodb/28003.conf
	mongod -f /server/mongodb/28004.conf

初始化复制集：
	28001作为主节点：
		mongo 10.1.5.123:28001/admin

		config = {

		"_id":"Carl",

		members:[

		{"_id":0,host:"10.1.5.123:28001"},

		{"_id":1,host:"10.1.5.123:28002"},

		{"_id":2,host:"10.1.5.123:28003"},

		{"_id":3,host:"10.1.5.123:28004"}]

		}

初始化复制集：
    rs.initiate(config)


增加节点：
	 rs.add("10.1.11.111:27017")
添加仲裁节点：
	 rs.addArb("10.1.11.111:27017")
删除节点:
	 rs.remove("10.1.11.111:27017")


修改成员属性：
	haha = rs.conf()
	haha.members[2]
	haha.members[0].priority=5

	rs.reconfig(haha)

人工干预选举
	priority   默认为1，越高越优先
	rs.freeze() 多少秒内不参加选举
	rs.stepDown() 

更改oplog大小
	1.将成员以单机模式启动
	2.将oplog最新的一条操作保存到临时表
	db.oplog.rs.find().sort({natural:-1}).limit(1)
	db.temp.save(db.oplog.rs.find().sort({natural:-1}).limit(1).next())
	记得验证保存信息
	db.temp.find()
	3.删除原来的oplog集合
	db.oplog.rs.drop()
	4.创建oplog，封顶表
	db.createCollection("oplog.rs",{capped:true,size:1024*1024*1024*4})
	5.将之前保存的最后一条oplog，导入新的oplog中
	db.oplog.rs.save(db.temp.findOne())
	6.将单机模式节点返回到复制集中


创建索引
	背景：主节点，有连接，请求特别多(RW)，其他节点都很多R
	db.coll.ensureIndex({background:true})  闲时创建索引

如果启用了认证，需要在主节点和从节点上的local数据库下，建个相同的用户名和密码的用户，可读写。 从节点连接主节点时，会用存储在local.system.users中的用户进行认证，最先尝试用repl用户，若没有，则用local.system.users中的第一个可用用户。


bind_ip

	bind127.0.0.1后，才可以操作db.runCommand(shutdownServer)
慢查询
slowms
profile   0=off 1=slow 2=all




config.members[2]

config.members[2] = {"_id":2,"host":"127.0.0.1:28003","arebiterOnly":true}


数据节点：
	存放数据(实体物理文件 .ns  .0)

选举节点：
	不存放数据仅作选举好充当复制集节点

按功能区分
	主节点：提供读写服务的节点
	从节点：提供读服务器的节点
		隐藏节点：对程序不可见的节点
		延时节点：延时复制的节点
		投票节点：具有投票权的节点 arbiter节点：无数据，

rs.isMaster()

version版本没修改一次，增加1
db.system.replset.update({"_id":"Carl"},{$set:{version:16}})

主节点：priority 至少为1

从节点：priority 可以为0

延时节点：priority为0 slavedelay=xx

隐藏节点：priority为0 hidden = true

无索引: priority为0 ，并且buildIndexes= true


